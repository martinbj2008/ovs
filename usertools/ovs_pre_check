#!/bin/bash

# Pre Check ovs-dpdk env.

logdir='/usr/local/var/log/openvswitch'
rundir='/usr/local/var/run/openvswitch'
sysconfdir='/etc'
etcdir='$sysconfdir/openvswitch'	 
datadir='/usr/local/share/openvswitch'
dbdir='/usr/local/etc/openvswitch'
bindir='/usr/bin'
sbindir='/usr/sbin'

mountdir='/dev/hugepages'

DB_FILE=$dbdir/conf.db
DB_SOCK=$rundir/db.sock
DB_SCHEMA=$datadir/vswitch.ovsschema

osCheck()
{
	echo -e "\e[1;32m[ovs-dpdk] Checking system version \e[0m"	
	echo ""	

	sysOS=`uname -r`

	if [ $sysOS == $KERNEL_VERSION ]; then
		echo -e "\e[1;32m[ovs-dpdk] System OS version is expected \e[0m"	
		echo ""	
	else
		echo -e "\e[1;31m[ovs-dpdk] ERROR: $HOST System OS version supposed be $KERNEL_VERSION \e[0m"
		echo ""	
		exit -1
	fi
}

pkgCheck()
{
	echo -e "\e[1;32m[ovs-dpdk] Checking essential pkg \e[0m"	
	echo ""	

	rpm -qa | grep $I40E_PKG &>/dev/null

	if [ $? -ne 0 ]; then
		echo -e "\e[1;32m[ovs-dpdk] ERROR: $I40E_PKG is not installed yet, starting to install \e[0m"	
		echo ""
		rpm -ivh $I40E_PKG 2>>/dev/null
		if [ $? -ne 0 ]; then
			echo -e "\e[1;32m[ovs-dpdk] ERROR: $I40E_PKG is installation failed \e[0m"	
			echo ""
			exit -1
		else
			echo -e "\e[1;32m[ovs-dpdk] $I40E_PKG is already installed \e[0m"	
			echo ""
		fi
	else
		echo -e "\e[1;32m[ovs-dpdk] $I40E_PKG is already installed \e[0m"	
		echo ""
	fi
}

iommuCheck()
{
	dmesg | grep -e DMAR -e IOMMU > /dev/null
	if [ $? -ne 0 ] ; then
		echo -e "\e[1;32m[ovs-dpdk] VT-d supposed enabled in the BIOS \e[0m"
		echo ""	
		exit -1
	fi

	iommu=`cat /proc/cmdline | grep iommu=pt`
	intel_iommu=`cat /proc/cmdline | grep intel_iommu=on`
	if [[ $iommu && $intel_iommu ]];then
		echo -e "\e[1;32m[ovs-dpdk] VT-d is enabled in the kernel \e[0m"
		echo ""	
	else
		echo -e "\e[1;31m[ovs-dpdk] VT-d not enabled in the kernel \e[0m"
		echo ""	
		exit -1
	fi
}

numaCheck()
{
	isNuma=`lscpu |grep "NUMA node(s):" |awk '{print $NF}'`
	if [ $isNuma -eq 1 ]; then
		echo -e "\e[1;31m[ovs-dpdk] NUMA is not enabled , to operate \e[0m"
		echo ""	
	else
		echo -e "\e[1;32m[ovs-dpdk] NUMA is enabled in the kernel \e[0m"
		echo ""	
	fi
	
}

threadCheck()
{
	cores=`lscpu |grep "Thread(s) per core" | awk '{print $NF}'`
	if [ $cores -eq 2 ]; then
		echo -e "\e[1;32m[ovs-dpdk] Hyper-Threading is enabled in the kernel \e[0m"
		echo ""	
	else
		echo -e "\e[1;31m[ovs-dpdk] Hyper-Threading is not enabled in the kernel \e[0m"
		echo ""	
		exit -1
	fi
}

hugepageCheck()
{
	grep -s "$mountdir" /proc/mounts > /dev/null
	if [ $? -ne 0 ] ; then
		mount -t hugetlbfs none $mountdir
	fi

	pagesize=`awk '/Hugepagesize/ {print $2}' /proc/meminfo`
	pagetotal=`awk '/HugePages_Total/ {print $2} ' /proc/meminfo`
	if [ $pagesize -a $pagetotal ] ; then
		if [ $pagesize -ne 2048 ]; then
			echo -e "\e[1;32m[ovs-dpdk] Hugepage size supposed to be 2048 \e[0m"
			echo ""	
			exit -1
		fi
		echo -e "\e[1;32m[ovs-dpdk] Hugepage size : $pagesize Hugepage Total : $pagetotal \e[0m"
		echo ""	
	else
		echo -e "\e[1;31m[ovs-dpdk] Mount Hugepage failed \e[0m"
		echo ""	
		exit -1
	fi
}

toolsCheck()
{
	if [ ! -f "$sbindir/dpdk-devbind" ]; then
		yum install dpdk-tools -y > /dev/null
	fi

	if [ ! -f "$sbindir/dpdk-devbind" ]; then
		echo -e "\e[1;31m[ovs-dpdk] dpdk-devbind tools uninstalled \e[0m"
		echo ""	
		exit -1
	else
		echo -e "\e[1;32m[ovs-dpdk] dpdk-devbind tools installed \e[0m"
		echo ""	
	fi
}

sriovCheck()
{
	device=$INTERFACE

	dev_num=`cat /sys/class/net/$device/device/sriov_numvfs`
	if [ $dev_num -eq 2 ] ; then
		echo -e "\e[1;32m[ovs-dpdk] NIC num is already expected \e[0m"
		echo ""	
		return 1
	fi

	if [[ $device ]];then
		lspci | grep 'Virtual Function' > /dev/null
		if [ $? -ne 0 ] ; then
			echo $SRIOV_NUM > /sys/class/net/$device/device/sriov_numvfs
			for ((var = 0; var < $SRIOV_NUM; var++))
			do
				ip link set $device vf $var spoofchk off
			done
		fi
	else
		echo -e "\e[1;31m[ovs-dpdk] NIC num is not expected \e[0m"
		echo ""	
		exit -1
	fi
}

vfioCheck()
{
	$sbindir/dpdk-devbind --status | grep "drv=vfio-pci" > /dev/null
	if [ $? -eq 0 ] ; then
		echo -e "\e[1;32m[ovs-dpdk] VFIO module bond VF port success \e[0m"
		return 1
	fi

	modprobe vfio-pci

	/sbin/lsmod | grep -s vfio_pci > /dev/null
	if [ $? -ne 0 ] ; then
		echo -e "\e[1;31m[ovs-dpdk] VFIO module modprobe failed \e[0m"
		echo ""	
		exit -1
	else
		echo -e "\e[1;32m[ovs-dpdk] VFIO module modprobe success \e[0m"
		echo ""	
	fi

	/usr/bin/chmod a+x /dev/vfio
	/usr/bin/chmod 0666 /dev/vfio/*

	vf_pci1=`lspci | grep $NIC_TYPE | grep	Virtual | gawk '{print $1}' | sed -n '1p'`
	vf_pci2=`lspci | grep $NIC_TYPE | grep	Virtual | gawk '{print $1}' | sed -n '2p'`
	if [[ $vf_pci1 && $vf_pci2 ]];then
		$sbindir/dpdk-devbind --bind=vfio-pci $vf_pci1
	else
		echo -e "\e[1;31m[ovs-dpdk] VF Port num is not expected \e[0m"
		echo ""	
		exit -1
	fi

	$sbindir/dpdk-devbind --status | grep "drv=vfio-pci" > /dev/null
	if [ $? -ne 0 ] ; then
		echo -e "\e[1;31m[ovs-dpdk] VFIO module bond VF port failed \e[0m"
		echo ""	
		exit -1
	else
		echo -e "\e[1;32m[ovs-dpdk] VFIO module bond VF port success \e[0m"
		echo ""	
	fi
}

echo
echo '===== OVS-DPDK Pre Check ====='
echo

conf_file=/etc/openvswitch/ovs-dpdk.conf

if test -e $conf_file; then  
	source $conf_file
else
	echo -e "\e[1;31m[ovs-dpdk] ERROR Could not find ovs-dpdk.conf \e[0m"
	echo ""	
	exit -1
fi

osCheck
pkgCheck
numaCheck
iommuCheck
threadCheck
hugepageCheck
toolsCheck
sriovCheck
vfioCheck

echo
echo '===== END ====='
