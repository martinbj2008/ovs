#!/bin/sh

log_file="/tmp/tnl_set_arp_log"

function log(){
    date=`date +"%Y-%m-%d--%H:%m:%S"`
    echo "${date} --- $1" >> $log_file
}

function iptohex() {
    IFS=.
    _ip=$1
    for str in $_ip
    do
        printf "%02X" $str
    done
}

function sendarp(){
    _dev=$1

    deault_gw=`ip route show |grep default|gawk '{print $3}'`
    ping -c 1 $deault_gw >> /dev/null &

    net=`ip route show dev $_dev |grep kernel | gawk '{print $1}'| gawk -F '/' '{print $1}'`
    net_hex=`iptohex $net`
    net_dig=`echo "ibase=16;obase=A;$net_hex"|bc`

    mask=`ip route show dev $_dev |grep kernel | gawk '{print $1}'| gawk -F '/' '{print $2}'`
    mask=`expr 32 - $mask`

    mask_dig=`echo 1 | gawk '{print lshift($0, lf)}' lf="$mask"`
    mask_dig=`expr $mask_dig - 2`


    i=1
    while [ $i -le $mask_dig ];do
        ip_hex=`echo "ibase=A;obase=16; $net_dig + $i"|bc`
        ping -c 1 -I $_dev 0x$ip_hex >> /dev/null &
        i=`expr $i + 1`
    done
}

function confarp() {
    _br=$1
    _dev=$2
    
    arp -n >> $log_file
    
    pid_cnt=`ps -ax|grep ovs-vswitchd|grep -v monitoring| grep -v grep|gawk '{print $1}'|wc -l`

    deault_gw=`ip route show |grep default|gawk '{print $3}'`
    default_mac=`arp -n |grep $deault_gw|gawk '{print $3}'`
    
    j=1
    while [ $j -le $pid_cnt ];
    do
        pid=`ps -ax|grep ovs-vswitchd|grep -v monitoring| grep -v grep|gawk '{print $1}'|sed -n "${j}p"`
        ovs-appctl -t /usr/local/var/run/openvswitch/ovs-vswitchd.${pid}.ctl tnl/arp/set $_br $deault_gw $default_mac 2>&1 >> /dev/null
        log "Set arp $deault_gw $default_mac"

        arp_cnt=`arp -n |grep -v incomplete |grep $_dev|wc -l`
        i=1
        while [ $i -le $arp_cnt ];do
            ip=`arp -n |grep -v incomplete |grep $_dev|gawk '{print $1}'|sed -n "${i}p"`
            mac=`arp -n |grep -v incomplete |grep $_dev|gawk '{print $3}'|sed -n "${i}p"`
            ovs-appctl -t /usr/local/var/run/openvswitch/ovs-vswitchd.${pid}.ctl tnl/arp/set $_br $ip $mac 2>&1 >> /dev/null
            log "Set arp $ip $mac"
            i=`expr $i + 1`
        done
        j=`expr $j + 1`
    done
}

br=$1
dev=$2
interval=$3

if [ -z $br ] || [ -z  $dev ];then
    echo "USAGE:"
    echo "CMD symbol $0 br-name NIC interval(>= 30)"
    exit
else
    if [ -z "$interval" ];then
        sendarp $dev
        sleep 1
        confarp $br $dev
        exit
    elif [ $interval -lt 30 ];then
        echo "USAGE:"
        echo "CMD symbol $0 br-name NIC interval(>= 30)"
        exit
    fi
fi

#main
while [ 1 ];
do
    sendarp $dev
    sleep 1
    confarp $br $dev
    sleep $interval
done
